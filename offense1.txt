Inspecting 65 files
W.......C..........WW.CC.CCCC..............C.....CWCWWWWWCCWWWWCW

Offenses:

Gemfile:32:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rubocop", require: false
    ^^^^^^^^^
Gemfile:63:3: W: Bundler/DuplicatedGem: Gem rubocop requirements already given on line 32 of the Gemfile.
  gem 'rubocop'
  ^^^^^^^^^^^^^
Gemfile:83:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    gem 'brakeman'
^^^^
Gemfile:84:5: W: Bundler/DuplicatedGem: Gem rubocop requirements already given on line 32 of the Gemfile.
    gem 'rubocop'
    ^^^^^^^^^^^^^
Gemfile:85:5: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem capybara should appear before rubocop.
    gem 'capybara', '>= 3.26'
    ^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:88:5: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem simplecov should appear before webdrivers.
    gem 'simplecov', :require => false
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:88:22: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    gem 'simplecov', :require => false
                     ^^^^^^^^^^^
Gemfile:95:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem axlsx should appear before rubyzip.
gem 'axlsx', git: 'https://github.com/randym/axlsx.git', ref: 'c8ac844'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:97:1: C: [Correctable] Layout/TrailingEmptyLines: 2 trailing blank lines detected.
app/controllers/organizations_controller.rb:10:19: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      format.xlsx {
                  ^
app/controllers/organizations_controller.rb:15:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { render :index }
                    ^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:20:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ScrapeJob.perform_later("https://stuactonline.tamu.edu/app/search/index/index/q/a/search/letter")
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:24:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    DownloadJob.perform_later("Input")
                              ^^^^^^^
app/controllers/organizations_controller.rb:32:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_to organizations_url, notice: 'All organizations and contacts were successfully destroyed.' }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:33:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.json { head :no_content }
                    ^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'csv'
^
app/jobs/download_job.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    queue_as :default
^^^^
app/jobs/download_job.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def perform(text)
^^^^
app/jobs/download_job.rb:7:17: W: [Correctable] Lint/UnusedMethodArgument: Unused method argument - text. If it's necessary, use _ or _text as an argument name to indicate that it won't be used. If it's unnecessary, remove it. You can also write as perform(*) if you want the method to accept any arguments but don't care about them.
    def perform(text)
                ^^^^
app/jobs/download_job.rb:8:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        filename = "new_file"
    ^^^^
app/jobs/download_job.rb:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        filename = "new_file"
                   ^^^^^^^^^^
app/jobs/download_job.rb:9:9: C: Naming/VariableName: Use snake_case for variable names.
        orgTable = Organization.all;
        ^^^^^^^^
app/jobs/download_job.rb:9:36: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
        orgTable = Organization.all;
                                   ^
app/jobs/download_job.rb:11:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        CSV.open("#{filename}.csv", "w") do |csv|
                                    ^^^
app/jobs/download_job.rb:12:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            csv << ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
        ^^^^
app/jobs/download_job.rb:12:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            csv << ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                    ^^^^
app/jobs/download_job.rb:12:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            csv << ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                          ^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:12:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            csv << ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                                  ^^^^^^^^^^^^^^
app/jobs/download_job.rb:12:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            csv << ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                                                  ^^^^^^^^^^^^^^^
app/jobs/download_job.rb:12:84: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            csv << ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                                                                   ^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:12:104: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            csv << ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                                                                                       ^^^^^^^^^^^^^^^
app/jobs/download_job.rb:12:121: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            csv << ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:13:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/jobs/download_job.rb:15:13: C: Naming/VariableName: Use snake_case for variable names.
            orgTable.each_with_index do |org, index|
            ^^^^^^^^
app/jobs/download_job.rb:16:13: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                orgid = Organization.find_by(orgID: index).orgID
            ^^^^
app/jobs/download_job.rb:17:17: C: Naming/VariableName: Use snake_case for variable names.
                orgName = Organization.find_by(orgID: index).name
                ^^^^^^^
app/jobs/download_job.rb:18:17: C: Naming/VariableName: Use snake_case for variable names.
                contactName = "Not provided on STUACT website"
                ^^^^^^^^^^^
app/jobs/download_job.rb:18:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                contactName = "Not provided on STUACT website"
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:19:17: C: Naming/VariableName: Use snake_case for variable names.
                contactEmail = "Not provided on STUACT website"
                ^^^^^^^^^^^^
app/jobs/download_job.rb:19:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                contactEmail = "Not provided on STUACT website"
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:20:17: C: Naming/VariableName: Use snake_case for variable names.
                officerPosition = "Not provided on STUACT website"
                ^^^^^^^^^^^^^^^
app/jobs/download_job.rb:20:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                officerPosition = "Not provided on STUACT website"
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:21:17: C: Naming/VariableName: Use snake_case for variable names.
                updateYear = "Contact information was never entered"
                ^^^^^^^^^^
app/jobs/download_job.rb:21:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                updateYear = "Contact information was never entered"
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:22:17: C: Naming/VariableName: Use snake_case for variable names.
                appsBuilt = 0
                ^^^^^^^^^
app/jobs/download_job.rb:25:28: C: [Correctable] Rails/WhereExists: Prefer exists?(orgID: orgid) over where(orgID: orgid).exists?.
                if Contact.where(orgID: orgid).exists? then #There is a contact attributed to org, add to csv
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:25:56: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
                if Contact.where(orgID: orgid).exists? then #There is a contact attributed to org, add to csv
                                                       ^^^^
app/jobs/download_job.rb:25:61: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
                if Contact.where(orgID: orgid).exists? then #There is a contact attributed to org, add to csv
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:25:61: C: Style/InlineComment: Avoid trailing inline comments.
                if Contact.where(orgID: orgid).exists? then #There is a contact attributed to org, add to csv
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:26:17: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                    contactName = Contact.find_by(orgID: org.orgID).name #Name in database
                ^^^^
app/jobs/download_job.rb:26:21: C: Naming/VariableName: Use snake_case for variable names.
                    contactName = Contact.find_by(orgID: org.orgID).name #Name in database
                    ^^^^^^^^^^^
app/jobs/download_job.rb:26:74: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
                    contactName = Contact.find_by(orgID: org.orgID).name #Name in database
                                                                         ^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:26:74: C: Style/InlineComment: Avoid trailing inline comments.
                    contactName = Contact.find_by(orgID: org.orgID).name #Name in database
                                                                         ^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:27:21: C: Naming/VariableName: Use snake_case for variable names.
                    contactEmail = Contact.find_by(orgID: org.orgID).email #Name in database
                    ^^^^^^^^^^^^
app/jobs/download_job.rb:27:76: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
                    contactEmail = Contact.find_by(orgID: org.orgID).email #Name in database
                                                                           ^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:27:76: C: Style/InlineComment: Avoid trailing inline comments.
                    contactEmail = Contact.find_by(orgID: org.orgID).email #Name in database
                                                                           ^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:28:21: C: Naming/VariableName: Use snake_case for variable names.
                    officerPosition = Contact.find_by(orgID: org.orgID).officerposition #Position in database
                    ^^^^^^^^^^^^^^^
app/jobs/download_job.rb:28:89: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
                    officerPosition = Contact.find_by(orgID: org.orgID).officerposition #Position in database
                                                                                        ^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:28:89: C: Style/InlineComment: Avoid trailing inline comments.
                    officerPosition = Contact.find_by(orgID: org.orgID).officerposition #Position in database
                                                                                        ^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:29:21: C: Naming/VariableName: Use snake_case for variable names.
                    updateYear = Contact.find_by(orgID: org.orgID).year #Last updated in database
                    ^^^^^^^^^^
app/jobs/download_job.rb:29:73: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
                    updateYear = Contact.find_by(orgID: org.orgID).year #Last updated in database
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:29:73: C: Style/InlineComment: Avoid trailing inline comments.
                    updateYear = Contact.find_by(orgID: org.orgID).year #Last updated in database
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/download_job.rb:32:32: C: Naming/VariableName: Use snake_case for variable names.
                csv << [orgid, orgName, contactName, contactEmail, officerPosition, updateYear, appsBuilt]
                               ^^^^^^^
app/jobs/download_job.rb:32:41: C: Naming/VariableName: Use snake_case for variable names.
                csv << [orgid, orgName, contactName, contactEmail, officerPosition, updateYear, appsBuilt]
                                        ^^^^^^^^^^^
app/jobs/download_job.rb:32:54: C: Naming/VariableName: Use snake_case for variable names.
                csv << [orgid, orgName, contactName, contactEmail, officerPosition, updateYear, appsBuilt]
                                                     ^^^^^^^^^^^^
app/jobs/download_job.rb:32:68: C: Naming/VariableName: Use snake_case for variable names.
                csv << [orgid, orgName, contactName, contactEmail, officerPosition, updateYear, appsBuilt]
                                                                   ^^^^^^^^^^^^^^^
app/jobs/download_job.rb:32:85: C: Naming/VariableName: Use snake_case for variable names.
                csv << [orgid, orgName, contactName, contactEmail, officerPosition, updateYear, appsBuilt]
                                                                                    ^^^^^^^^^^
app/jobs/download_job.rb:32:97: C: Naming/VariableName: Use snake_case for variable names.
                csv << [orgid, orgName, contactName, contactEmail, officerPosition, updateYear, appsBuilt]
                                                                                                ^^^^^^^^^
app/jobs/download_job.rb:36:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/jobs/scrape_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'open-uri'
^
app/jobs/scrape_job.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    queue_as :default
^^^^
app/jobs/scrape_job.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def perform(url)
^^^^
app/jobs/scrape_job.rb:9:5: C: Metrics/AbcSize: Assignment Branch Condition size for perform is too high. [<48, 77, 20> 92.91/45]
    def perform(url) ...
    ^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:9:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for perform is too high. [13/10]
    def perform(url) ...
    ^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:9:5: C: Metrics/MethodLength: Method has too many lines. [77/30]
    def perform(url) ...
    ^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:9:5: C: Metrics/PerceivedComplexity: Perceived complexity for perform is too high. [15/10]
    def perform(url) ...
    ^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:9:17: W: [Correctable] Lint/UnusedMethodArgument: Unused method argument - url. If it's necessary, use _ or _url as an argument name to indicate that it won't be used. If it's unnecessary, remove it. You can also write as perform(*) if you want the method to accept any arguments but don't care about them.
    def perform(url)
                ^^^
app/jobs/scrape_job.rb:10:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        html = URI.open("https://stuactonline.tamu.edu/app/search/index/index/q/a/search/letter").read
    ^^^^
app/jobs/scrape_job.rb:10:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        html = URI.open("https://stuactonline.tamu.edu/app/search/index/index/q/a/search/letter").read
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:12:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/jobs/scrape_job.rb:14:9: C: Naming/VariableName: Use snake_case for variable names.
        @studentOrgs = []
        ^^^^^^^^^^^^
app/jobs/scrape_job.rb:24:9: C: Metrics/BlockLength: Block has too many lines. [64/60]
        doc.xpath("//big/a/@href").each do |element| ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:24:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        doc.xpath("//big/a/@href").each do |element|
                  ^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:25:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            element = element.text
        ^^^^
app/jobs/scrape_job.rb:28:29: C: Security/Open: The use of URI.open is a serious security risk.
            link_html = URI.open("#{element}").read
                            ^^^^
app/jobs/scrape_job.rb:28:34: C: [Correctable] Style/RedundantInterpolation: Prefer to_s over string interpolation.
            link_html = URI.open("#{element}").read
                                 ^^^^^^^^^^^^
app/jobs/scrape_job.rb:34:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/jobs/scrape_job.rb:45:13: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
            if (link_name == "") then
            ^^
app/jobs/scrape_job.rb:45:16: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
            if (link_name == "") then
               ^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:45:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            if (link_name == "") then
                             ^^
app/jobs/scrape_job.rb:45:34: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
            if (link_name == "") then
                                 ^^^^
app/jobs/scrape_job.rb:46:13: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                link_name = "empty"
            ^^^^
app/jobs/scrape_job.rb:46:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                link_name = "empty"
                            ^^^^^^^
app/jobs/scrape_job.rb:48:13: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
            if (link_email == "") then
            ^^
app/jobs/scrape_job.rb:48:16: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
            if (link_email == "") then
               ^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:48:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            if (link_email == "") then
                              ^^
app/jobs/scrape_job.rb:48:35: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
            if (link_email == "") then
                                  ^^^^
app/jobs/scrape_job.rb:49:13: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                link_email = "empty"
            ^^^^
app/jobs/scrape_job.rb:49:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                link_email = "empty"
                             ^^^^^^^
app/jobs/scrape_job.rb:53:29: C: [Correctable] Rails/WhereExists: Prefer exists?(name: link_org) over where(name: link_org).exists?.
            if Organization.where(name: link_org).exists? then
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:53:59: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
            if Organization.where(name: link_org).exists? then
                                                          ^^^^
app/jobs/scrape_job.rb:56:13: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                orgID_temp = Organization.find_by(name: link_org)
            ^^^^
app/jobs/scrape_job.rb:56:17: C: Naming/VariableName: Use snake_case for variable names.
                orgID_temp = Organization.find_by(name: link_org)
                ^^^^^^^^^^
app/jobs/scrape_job.rb:60:28: C: [Correctable] Rails/WhereExists: Prefer exists?(orgID: orgID_temp.orgID, name: link_name) over where(orgID: orgID_temp.orgID, name: link_name).exists?.
                if Contact.where(orgID: orgID_temp.orgID, name: link_name).exists? then
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:60:41: C: Naming/VariableName: Use snake_case for variable names.
                if Contact.where(orgID: orgID_temp.orgID, name: link_name).exists? then
                                        ^^^^^^^^^^
app/jobs/scrape_job.rb:60:84: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
                if Contact.where(orgID: orgID_temp.orgID, name: link_name).exists? then
                                                                                   ^^^^
app/jobs/scrape_job.rb:61:17: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                    contact[:personID] = Contact.find_by(orgID: orgID_temp.orgID, name: link_name).personID
                ^^^^
app/jobs/scrape_job.rb:61:65: C: Naming/VariableName: Use snake_case for variable names.
                    contact[:personID] = Contact.find_by(orgID: orgID_temp.orgID, name: link_name).personID
                                                                ^^^^^^^^^^
app/jobs/scrape_job.rb:62:39: C: Naming/VariableName: Use snake_case for variable names.
                    contact[:orgID] = orgID_temp.orgID
                                      ^^^^^^^^^^
app/jobs/scrape_job.rb:63:43: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
                    contact[:year] = Date.today
                                          ^^^^^
app/jobs/scrape_job.rb:66:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    contact[:officerposition] = "Both org and contact name existed"
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:67:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    contact[:description] = "Updating the contact information"
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:69:42: C: Naming/VariableName: Use snake_case for variable names.
                    Contact.where(orgID: orgID_temp.orgID, name: link_name).update(contact)
                                         ^^^^^^^^^^
app/jobs/scrape_job.rb:69:77: C: [Correctable] Rails/SaveBang: Use update! instead of update if the return value is not checked.
                    Contact.where(orgID: orgID_temp.orgID, name: link_name).update(contact)
                                                                            ^^^^^^
app/jobs/scrape_job.rb:70:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/jobs/scrape_job.rb:73:17: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                    while Contact.where(personID: contactcount).exists? do
                ^^^^
app/jobs/scrape_job.rb:73:21: C: [Correctable] Style/WhileUntilModifier: Favor modifier while usage when having a single-line body.
                    while Contact.where(personID: contactcount).exists? do
                    ^^^^^
app/jobs/scrape_job.rb:73:35: C: [Correctable] Rails/WhereExists: Prefer exists?(personID: contactcount) over where(personID: contactcount).exists?.
                    while Contact.where(personID: contactcount).exists? do
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:73:73: C: [Correctable] Style/WhileUntilDo: Do not use do with multi-line while.
                    while Contact.where(personID: contactcount).exists? do
                                                                        ^^
app/jobs/scrape_job.rb:74:21: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                        contactcount = contactcount + 1
                    ^^^^
app/jobs/scrape_job.rb:74:25: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
                        contactcount = contactcount + 1
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:76:21: C: [Correctable] Style/NegatedIf: Favor unless over if for negative conditions.
                    if !(link_name == "empty" && link_email == "empty") then ...
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:76:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    if !(link_name == "empty" && link_email == "empty") then
                                      ^^^^^^^
app/jobs/scrape_job.rb:76:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    if !(link_name == "empty" && link_email == "empty") then
                                                               ^^^^^^^
app/jobs/scrape_job.rb:76:73: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
                    if !(link_name == "empty" && link_email == "empty") then
                                                                        ^^^^
app/jobs/scrape_job.rb:77:21: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                        contact[:personID] = contactcount
                    ^^^^
app/jobs/scrape_job.rb:78:43: C: Naming/VariableName: Use snake_case for variable names.
                        contact[:orgID] = orgID_temp.orgID
                                          ^^^^^^^^^^
app/jobs/scrape_job.rb:79:47: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
                        contact[:year] = Date.today
                                              ^^^^^
app/jobs/scrape_job.rb:82:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        contact[:officerposition] = "Org existed, but contact did not"
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:83:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        contact[:description] = "empty"
                                                ^^^^^^^
app/jobs/scrape_job.rb:85:48: C: [Correctable] Rails/SaveBang: Use first_or_create! instead of first_or_create if the return value is not checked.
                        Contact.where(contact).first_or_create
                                               ^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:88:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/jobs/scrape_job.rb:91:13: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                while Organization.where(orgID: orgcount).exists? do
            ^^^^
app/jobs/scrape_job.rb:91:17: C: [Correctable] Style/WhileUntilModifier: Favor modifier while usage when having a single-line body.
                while Organization.where(orgID: orgcount).exists? do
                ^^^^^
app/jobs/scrape_job.rb:91:36: C: [Correctable] Rails/WhereExists: Prefer exists?(orgID: orgcount) over where(orgID: orgcount).exists?.
                while Organization.where(orgID: orgcount).exists? do
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:91:67: C: [Correctable] Style/WhileUntilDo: Do not use do with multi-line while.
                while Organization.where(orgID: orgcount).exists? do
                                                                  ^^
app/jobs/scrape_job.rb:92:17: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                    orgcount = orgcount + 1
                ^^^^
app/jobs/scrape_job.rb:92:21: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
                    orgcount = orgcount + 1
                    ^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:94:17: C: [Correctable] Style/WhileUntilModifier: Favor modifier while usage when having a single-line body.
                while Contact.where(personID: contactcount).exists? do
                ^^^^^
app/jobs/scrape_job.rb:94:31: C: [Correctable] Rails/WhereExists: Prefer exists?(personID: contactcount) over where(personID: contactcount).exists?.
                while Contact.where(personID: contactcount).exists? do
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:94:69: C: [Correctable] Style/WhileUntilDo: Do not use do with multi-line while.
                while Contact.where(personID: contactcount).exists? do
                                                                    ^^
app/jobs/scrape_job.rb:95:17: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                    contactcount = contactcount + 1
                ^^^^
app/jobs/scrape_job.rb:95:21: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
                    contactcount = contactcount + 1
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:99:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                org[:description] = "Org not already in database"
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:101:41: C: [Correctable] Rails/SaveBang: Use first_or_create! instead of first_or_create if the return value is not checked.
                Organization.where(org).first_or_create
                                        ^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:103:17: C: [Correctable] Style/NegatedIf: Favor unless over if for negative conditions.
                if !(link_name == "empty" && link_email == "empty") then ...
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:103:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                if !(link_name == "empty" && link_email == "empty") then
                                  ^^^^^^^
app/jobs/scrape_job.rb:103:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                if !(link_name == "empty" && link_email == "empty") then
                                                           ^^^^^^^
app/jobs/scrape_job.rb:103:69: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
                if !(link_name == "empty" && link_email == "empty") then
                                                                    ^^^^
app/jobs/scrape_job.rb:104:17: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                    contact[:personID] = contactcount
                ^^^^
app/jobs/scrape_job.rb:106:43: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
                    contact[:year] = Date.today
                                          ^^^^^
app/jobs/scrape_job.rb:109:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    contact[:officerposition] = "not in database"
                                                ^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:110:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    contact[:description] = "neither name or email are empty"
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:112:44: C: [Correctable] Rails/SaveBang: Use first_or_create! instead of first_or_create if the return value is not checked.
                    Contact.where(contact).first_or_create
                                           ^^^^^^^^^^^^^^^
app/jobs/scrape_job.rb:117:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/models/appcat.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    belongs_to :category
^^^^
app/models/appcat.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    belongs_to :application
^^^^
app/models/appcat.rb:6:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/appcat.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :appcatID, presence: true, uniqueness: true
^^^^
app/models/appcat.rb:7:5: C: Rails/UniqueValidationWithoutIndex: Uniqueness validation should have a unique index on the database column.
    validates :appcatID, presence: true, uniqueness: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/appcat.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :categoryID, presence: true
^^^^
app/models/appcat.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :applicationID, presence: true
^^^^
app/models/application.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :applicationID, presence: true, uniqueness: true
^^^^
app/models/application.rb:4:5: C: Rails/UniqueValidationWithoutIndex: Uniqueness validation should have a unique index on the database column.
    validates :applicationID, presence: true, uniqueness: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/application.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :orgID, presence: true
^^^^
app/models/application.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :name, presence: true
^^^^
app/models/application.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :datebuilt, presence: true
^^^^
app/models/application.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :githublink, presence: true
^^^^
app/models/application.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :description, presence: true
^^^^
app/models/application.rb:10:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/application.rb:14:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validate :orgID_exists
^^^^
app/models/application.rb:15:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :appcats
^^^^
app/models/application.rb:15:5: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
    has_many :appcats
    ^^^^^^^^
app/models/application.rb:16:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :categories, through: :appcats
^^^^
app/models/application.rb:18:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def orgID_exists
^^^^
app/models/application.rb:18:9: C: Naming/MethodName: Use snake_case for method names.
    def orgID_exists
        ^^^^^^^^^^^^
app/models/application.rb:19:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        if !Organization.where(orgID: self.orgID).exists? then
    ^^^^
app/models/application.rb:19:9: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if !Organization.where(orgID: self.orgID).exists? then
        ^^
app/models/application.rb:19:9: C: [Correctable] Style/NegatedIf: Favor unless over if for negative conditions.
        if !Organization.where(orgID: self.orgID).exists? then ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/application.rb:19:26: C: [Correctable] Rails/WhereExists: Prefer exists?(orgID: self.orgID) over where(orgID: self.orgID).exists?.
        if !Organization.where(orgID: self.orgID).exists? then
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/application.rb:19:39: C: [Correctable] Style/RedundantSelf: Redundant self detected.
        if !Organization.where(orgID: self.orgID).exists? then
                                      ^^^^
app/models/application.rb:19:59: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
        if !Organization.where(orgID: self.orgID).exists? then
                                                          ^^^^
app/models/application.rb:20:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            errors.add(:orgID, 'Must have a valid organization ID.')
        ^^^^
app/models/category.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :appcats
^^^^
app/models/category.rb:4:5: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
    has_many :appcats
    ^^^^^^^^
app/models/category.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :applications, through: :appcats
^^^^
app/models/category.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :categoryID, presence: true, uniqueness: true
^^^^
app/models/category.rb:7:5: C: Rails/UniqueValidationWithoutIndex: Uniqueness validation should have a unique index on the database column.
    validates :categoryID, presence: true, uniqueness: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/category.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :name, presence: true
^^^^
app/models/category.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :description, presence: true
^^^^
app/models/category.rb:10:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :appcats, presence: true
^^^^
app/models/contact.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :organizations
^^^^
app/models/contact.rb:4:5: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
    has_many :organizations
    ^^^^^^^^
app/models/contact.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validate :orgID_exists
^^^^
app/models/contact.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :personID, presence: true, uniqueness: true
^^^^
app/models/contact.rb:7:5: C: Rails/UniqueValidationWithoutIndex: Uniqueness validation should have a unique index on the database column.
    validates :personID, presence: true, uniqueness: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/contact.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :orgID, presence: true
^^^^
app/models/contact.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :year, presence: true
^^^^
app/models/contact.rb:10:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :name, presence: true
^^^^
app/models/contact.rb:11:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :email, presence: true
^^^^
app/models/contact.rb:12:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :officerposition, presence: true
^^^^
app/models/contact.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :description, presence: true
^^^^
app/models/contact.rb:15:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def orgID_exists
^^^^
app/models/contact.rb:15:9: C: Naming/MethodName: Use snake_case for method names.
    def orgID_exists
        ^^^^^^^^^^^^
app/models/contact.rb:16:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        if !Organization.where(orgID: self.orgID).exists? then
    ^^^^
app/models/contact.rb:16:9: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if !Organization.where(orgID: self.orgID).exists? then
        ^^
app/models/contact.rb:16:9: C: [Correctable] Style/NegatedIf: Favor unless over if for negative conditions.
        if !Organization.where(orgID: self.orgID).exists? then ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/contact.rb:16:26: C: [Correctable] Rails/WhereExists: Prefer exists?(orgID: self.orgID) over where(orgID: self.orgID).exists?.
        if !Organization.where(orgID: self.orgID).exists? then
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/contact.rb:16:39: C: [Correctable] Style/RedundantSelf: Redundant self detected.
        if !Organization.where(orgID: self.orgID).exists? then
                                      ^^^^
app/models/contact.rb:16:59: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
        if !Organization.where(orgID: self.orgID).exists? then
                                                          ^^^^
app/models/contact.rb:17:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            errors.add(:orgID, 'Must have a valid organization ID.')
        ^^^^
app/models/organization.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :applications
^^^^
app/models/organization.rb:4:5: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
    has_many :applications
    ^^^^^^^^
app/models/organization.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :contacts
^^^^
app/models/organization.rb:5:5: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
    has_many :contacts
    ^^^^^^^^
app/models/organization.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :orgID, presence: true, uniqueness: true
^^^^
app/models/organization.rb:7:5: C: Rails/UniqueValidationWithoutIndex: Uniqueness validation should have a unique index on the database column.
    validates :orgID, presence: true, uniqueness: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/organization.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :name, presence: true, uniqueness: true
^^^^
app/models/organization.rb:8:5: C: Rails/UniqueValidationWithoutIndex: Uniqueness validation should have a unique index on the database column.
    validates :name, presence: true, uniqueness: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/organization.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :description, presence: true
^^^^
app/models/user.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :userID, presence: true, uniqueness: true
^^^^
app/models/user.rb:4:5: C: Rails/UniqueValidationWithoutIndex: Uniqueness validation should have a unique index on the database column.
    validates :userID, presence: true, uniqueness: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :name, presence: true
^^^^
app/models/user.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :username, presence: true, uniqueness: true
^^^^
app/models/user.rb:6:5: C: Rails/UniqueValidationWithoutIndex: Uniqueness validation should have a unique index on the database column.
    validates :username, presence: true, uniqueness: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :password, presence: true
^^^^
app/models/user.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :isadmin, presence: true
^^^^
app/views/organizations/index.xlsx.axlsx:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
wb = xlsx_package.workbook
^
app/views/organizations/index.xlsx.axlsx:3:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
wb.add_worksheet(name: "Organizations") do |sheet|
                       ^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:5:3: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
  sheet.add_row ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:5:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  sheet.add_row ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                 ^^^^
app/views/organizations/index.xlsx.axlsx:5:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  sheet.add_row ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                       ^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:5:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  sheet.add_row ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                               ^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:5:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  sheet.add_row ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                                               ^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:5:81: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  sheet.add_row ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                                                                ^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:5:101: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  sheet.add_row ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                                                                                    ^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:5:118: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  sheet.add_row ["ID", "Student Organization", "Contact Name", "Contact Email", "Officer Position", "Last Modified", "Number of Apps Built"]
                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:6:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/views/organizations/index.xlsx.axlsx:9:5: C: Naming/VariableName: Use snake_case for variable names.
    contactName = "Not provided on STUACT website"
    ^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:9:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    contactName = "Not provided on STUACT website"
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:10:5: C: Naming/VariableName: Use snake_case for variable names.
    contactEmail = "Not provided on STUACT website"
    ^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:10:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    contactEmail = "Not provided on STUACT website"
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:11:5: C: Naming/VariableName: Use snake_case for variable names.
    officerPosition = "Not provided on STUACT website"
    ^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:11:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    officerPosition = "Not provided on STUACT website"
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:12:5: C: Naming/VariableName: Use snake_case for variable names.
    updateYear = "Contact information was never entered"
    ^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:12:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    updateYear = "Contact information was never entered"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:13:5: C: Naming/VariableName: Use snake_case for variable names.
    numApps = 0
    ^^^^^^^
app/views/organizations/index.xlsx.axlsx:16:16: C: [Correctable] Rails/WhereExists: Prefer exists?(orgID: org.orgID) over where(orgID: org.orgID).exists?.
    if Contact.where(orgID: org.orgID).exists? then
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:16:48: C: [Correctable] Style/MultilineIfThen: Do not use then for multi-line if.
    if Contact.where(orgID: org.orgID).exists? then
                                               ^^^^
app/views/organizations/index.xlsx.axlsx:17:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        contactName = Contact.find_by(orgID: org.orgID).name # Name in database
    ^^^^
app/views/organizations/index.xlsx.axlsx:17:9: C: Naming/VariableName: Use snake_case for variable names.
        contactName = Contact.find_by(orgID: org.orgID).name # Name in database
        ^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:17:62: C: Style/InlineComment: Avoid trailing inline comments.
        contactName = Contact.find_by(orgID: org.orgID).name # Name in database
                                                             ^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:18:9: C: Naming/VariableName: Use snake_case for variable names.
        contactEmail = Contact.find_by(orgID: org.orgID).email # Name in database
        ^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:18:64: C: Style/InlineComment: Avoid trailing inline comments.
        contactEmail = Contact.find_by(orgID: org.orgID).email # Name in database
                                                               ^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:19:9: C: Naming/VariableName: Use snake_case for variable names.
        officerPosition = Contact.find_by(orgID: org.orgID).officerposition # Position in database
        ^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:19:77: C: Style/InlineComment: Avoid trailing inline comments.
        officerPosition = Contact.find_by(orgID: org.orgID).officerposition # Position in database
                                                                            ^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:20:9: C: Naming/VariableName: Use snake_case for variable names.
        updateYear = Contact.find_by(orgID: org.orgID).year # Last updated in database
        ^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:20:61: C: Style/InlineComment: Avoid trailing inline comments.
        updateYear = Contact.find_by(orgID: org.orgID).year # Last updated in database
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:22:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/views/organizations/index.xlsx.axlsx:23:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    sheet.add_row [org.orgID, org.name, contactName, contactEmail, officerPosition, updateYear, numApps]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:23:41: C: Naming/VariableName: Use snake_case for variable names.
    sheet.add_row [org.orgID, org.name, contactName, contactEmail, officerPosition, updateYear, numApps]
                                        ^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:23:54: C: Naming/VariableName: Use snake_case for variable names.
    sheet.add_row [org.orgID, org.name, contactName, contactEmail, officerPosition, updateYear, numApps]
                                                     ^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:23:68: C: Naming/VariableName: Use snake_case for variable names.
    sheet.add_row [org.orgID, org.name, contactName, contactEmail, officerPosition, updateYear, numApps]
                                                                   ^^^^^^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:23:85: C: Naming/VariableName: Use snake_case for variable names.
    sheet.add_row [org.orgID, org.name, contactName, contactEmail, officerPosition, updateYear, numApps]
                                                                                    ^^^^^^^^^^
app/views/organizations/index.xlsx.axlsx:23:97: C: Naming/VariableName: Use snake_case for variable names.
    sheet.add_row [org.orgID, org.name, contactName, contactEmail, officerPosition, updateYear, numApps]
                                                                                                ^^^^^^^
app/views/organizations/index.xlsx.axlsx:25:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/seeds.rb:10:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
spec/feature/alan_new_app_spec.rb:4:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/feature/feature_spec.rb
^
spec/feature/alan_new_app_spec.rb:12:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe 'New valid application requests', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:12:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'New valid application requests', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    Making a request with valid application information
^^^^
spec/feature/alan_new_app_spec.rb:13:12: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    Making a request with valid application information
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:13:14: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    Making a request with valid application information
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:13:22: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    Making a request with valid application information
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:13:27: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    Making a request with valid application information
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:13:33: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    Making a request with valid application information
                                ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:14:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'Adding valid application | Should add new application to database and view section' do
    ^^^^^^^^
spec/feature/alan_new_app_spec.rb:16:7: W: Lint/UselessAssignment: Useless assignment to variable - org.
      org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
      ^^^
spec/feature/alan_new_app_spec.rb:16:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
                         ^^^^^^
spec/feature/alan_new_app_spec.rb:17:7: W: Lint/UselessAssignment: Useless assignment to variable - contact.
      contact = Contact.create(personID: 1, orgID: 1, year: '02-24-2023', name: 'Person A',
      ^^^^^^^
spec/feature/alan_new_app_spec.rb:17:25: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      contact = Contact.create(personID: 1, orgID: 1, year: '02-24-2023', name: 'Person A',
                        ^^^^^^
spec/feature/alan_new_app_spec.rb:18:119: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                               email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                                                                                                                      ^
spec/feature/alan_new_app_spec.rb:19:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/feature/alan_new_app_spec.rb:29:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content('Valid application')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:32:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/feature/alan_new_app_spec.rb:33:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Invalid application request', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:35:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
scenario 'Invalid application | Should have a popup with information warning about each invalid field' do

spec/feature/alan_new_app_spec.rb:35:1: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
scenario 'Invalid application | Should have a popup with information warning about each invalid field' do
^^^^^^^^
spec/feature/alan_new_app_spec.rb:36:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    visit new_organization_path
^^^^
spec/feature/alan_new_app_spec.rb:37:5: W: Lint/UselessAssignment: Useless assignment to variable - org.
    org = Organization.create(orgID: 2, name: 'Test org 2', description: 'description')
    ^^^
spec/feature/alan_new_app_spec.rb:37:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    org = Organization.create(orgID: 2, name: 'Test org 2', description: 'description')
                       ^^^^^^
spec/feature/alan_new_app_spec.rb:38:5: W: Lint/UselessAssignment: Useless assignment to variable - contact.
    contact = Contact.create(personID: 1, orgID: 2, year: '02-24-2023', name: 'Person A',
    ^^^^^^^
spec/feature/alan_new_app_spec.rb:38:23: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    contact = Contact.create(personID: 1, orgID: 2, year: '02-24-2023', name: 'Person A',
                      ^^^^^^
spec/feature/alan_new_app_spec.rb:39:29: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                            email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                            ^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:39:29: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                            email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                            ^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:39:116: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                            email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                                                                                                                   ^
spec/feature/alan_new_app_spec.rb:50:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Invalid input:')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:51:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Github')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:52:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Description')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:53:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Ok')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:57:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Invalid applicationID', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:59:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
scenario 'Invalid applicationID | Should have a popup with information warning' do

spec/feature/alan_new_app_spec.rb:59:1: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
scenario 'Invalid applicationID | Should have a popup with information warning' do
^^^^^^^^
spec/feature/alan_new_app_spec.rb:60:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    visit new_organization_path
^^^^
spec/feature/alan_new_app_spec.rb:61:5: W: Lint/UselessAssignment: Useless assignment to variable - org.
    org = Organization.create(orgID: 3, name: 'Test org 3', description: 'description')
    ^^^
spec/feature/alan_new_app_spec.rb:61:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    org = Organization.create(orgID: 3, name: 'Test org 3', description: 'description')
                       ^^^^^^
spec/feature/alan_new_app_spec.rb:62:5: W: Lint/UselessAssignment: Useless assignment to variable - contact.
    contact = Contact.create(personID: 1, orgID: 1, year: '02-24-2023', name: 'Person A',
    ^^^^^^^
spec/feature/alan_new_app_spec.rb:62:23: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    contact = Contact.create(personID: 1, orgID: 1, year: '02-24-2023', name: 'Person A',
                      ^^^^^^
spec/feature/alan_new_app_spec.rb:63:29: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                            email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                            ^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:63:29: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                            email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                            ^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:63:116: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                            email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                                                                                                                   ^
spec/feature/alan_new_app_spec.rb:74:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Invalid input:')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:75:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('ApplicationID invalid!')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:76:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Ok')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:80:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Missing orgID', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:82:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'Non existing orgID | Should have a popup with information warning' do
^^^^
spec/feature/alan_new_app_spec.rb:82:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'Non existing orgID | Should have a popup with information warning' do
    ^^^^^^^^
spec/feature/alan_new_app_spec.rb:83:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    visit applications_path
^^^^
spec/feature/alan_new_app_spec.rb:92:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Invalid input:')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:93:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('OrgID does not exist!')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:94:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Ok')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:95:1: C: [Correctable] Layout/BlockAlignment: end at 95, 0 is not aligned with scenario 'Non existing orgID | Should have a popup with information warning' do at 82, 4.
end
^^^
spec/feature/alan_new_app_spec.rb:98:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Invalid orgID', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:100:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'Invalid orgID | Should have a popup with information warning' do
^^^^
spec/feature/alan_new_app_spec.rb:100:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'Invalid orgID | Should have a popup with information warning' do
    ^^^^^^^^
spec/feature/alan_new_app_spec.rb:101:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
    visit applications_path
    
spec/feature/alan_new_app_spec.rb:110:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Invalid input:')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:111:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('OrgID does not exist!')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:112:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Ok')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/alan_new_app_spec.rb:114:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/feature/integration_spec.rb:2:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/feature/feature_spec.rb
^
spec/feature/integration_spec.rb:6:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Can get to applications from home page' do
  ^^^^^^^^
spec/feature/integration_spec.rb:9:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/feature/maria_download_csv_spec.rb:1:12: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
# By: Maria 
           ^
spec/feature/maria_download_csv_spec.rb:4:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/feature/feature_spec.rb
^
spec/feature/maria_download_csv_spec.rb:7:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Downloading CSV', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:8:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Downloads a CSV' do
  ^^^^^^^^
spec/feature/maria_download_csv_spec.rb:11:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    data = CSV.read("new_file.csv", return_headers: true)
                    ^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:12:21: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    row = data.shift()
                    ^^
spec/feature/maria_download_csv_spec.rb:13:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Student Organization')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:14:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Contact Name')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:15:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Contact Email')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:16:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Officer Position')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:17:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Last Modified')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:18:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Number of Apps Built')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:22:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario '1-1 Matching: Contains (randomly selected) A Battery, Alpha Epsilon Phi Sorority, Aggie Bridge Club' do
  ^^^^^^^^
spec/feature/maria_download_csv_spec.rb:26:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    CSV.foreach("new_file.csv") do |row|
                ^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:27:10: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      if row.include? 'A Battery' 
         ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:27:34: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
      if row.include? 'A Battery' 
                                 ^
spec/feature/maria_download_csv_spec.rb:28:9: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
        pass = pass + 1
        ^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:29:7: W: Lint/DuplicateBranch: Duplicate branch body detected.
      elsif row.include? 'Alpha Epsilon Phi Sorority' ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:29:13: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      elsif row.include? 'Alpha Epsilon Phi Sorority'
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:30:9: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
        pass = pass + 1
        ^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:31:7: W: Lint/DuplicateBranch: Duplicate branch body detected.
      elsif row.include? 'Aggie Bridge Club' ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:31:13: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      elsif row.include? 'Aggie Bridge Club'
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:32:9: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
        pass = pass + 1
        ^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:35:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(pass).to equal(3)
    ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:39:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'No student orgs selected' do
  ^^^^^^^^
spec/feature/maria_download_csv_spec.rb:42:35: C: Style/InlineComment: Avoid trailing inline comments.
    click_on 'Exclude everything' # Will need to be changed based on how filter is implemented
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:46:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content("You are downloading a blank CSV file. Do you wish to proceed?")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:46:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_content("You are downloading a blank CSV file. Do you wish to proceed?")
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:50:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    CSV.foreach(".../test_file.csv") do |row|
                ^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:50:42: W: [Correctable] Lint/UnusedBlockArgument: Unused block argument - row. You can omit the argument if you don't care about it.
    CSV.foreach(".../test_file.csv") do |row|
                                         ^^^
spec/feature/maria_download_csv_spec.rb:51:7: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
      pass = pass + 1
      ^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:55:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    data = CSV.read(".../test_file.csv", return_headers: true)
                    ^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:56:21: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    row = data.shift()
                    ^^
spec/feature/maria_download_csv_spec.rb:57:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Student Organization')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:58:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Contact Name')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:59:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Contact Email')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:60:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Officer Position')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:61:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Last Modified')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:62:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(row).to have_content('Number of Apps Built')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:63:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(pass).to equal(1) # Should only have the header row
    ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:63:30: C: Style/InlineComment: Avoid trailing inline comments.
    expect(pass).to equal(1) # Should only have the header row
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:64:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.delete(".../test_file.csv")
                ^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:67:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Wait message pops up before 5 seconds have elapsed & disappears after finishing download' do
  ^^^^^^^^
spec/feature/maria_download_csv_spec.rb:71:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content("Your file is downloading")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:71:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_content("Your file is downloading")
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:74:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(elapsed).to be < 5
    ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:75:5: W: Lint/UselessAssignment: Useless assignment to variable - data.
    data = CSV.read(".../test_file.csv", return_headers: true)
    ^^^^
spec/feature/maria_download_csv_spec.rb:75:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    data = CSV.read(".../test_file.csv", return_headers: true)
                    ^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:76:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to_not have_content("Your file is downloading")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:76:18: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
    expect(page).to_not have_content("Your file is downloading")
                 ^^^^^^
spec/feature/maria_download_csv_spec.rb:76:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to_not have_content("Your file is downloading")
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:77:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.delete(".../test_file.csv")
                ^^^^^^^^^^^^^^^^^^^
spec/feature/maria_download_csv_spec.rb:79:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/feature/maria_scrape_stuact_spec.rb:4:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/feature/feature_spec.rb
^
spec/feature/maria_scrape_stuact_spec.rb:8:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Scraping from STUACT', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:9:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/feature/maria_scrape_stuact_spec.rb:10:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Sunny day: Scrapes correct output (org & contact)' do
  ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:11:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/feature/maria_scrape_stuact_spec.rb:17:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('A Battery') # First
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:17:47: C: Style/InlineComment: Avoid trailing inline comments.
    expect(page).to have_content('A Battery') # First
                                              ^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:18:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Alpha Epsilon Phi Sorority') # Middle
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:18:64: C: Style/InlineComment: Avoid trailing inline comments.
    expect(page).to have_content('Alpha Epsilon Phi Sorority') # Middle
                                                               ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:19:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Aggie Bridge Club') # Last
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:19:55: C: Style/InlineComment: Avoid trailing inline comments.
    expect(page).to have_content('Aggie Bridge Club') # Last
                                                      ^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:23:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Chad Parker') # First
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:23:49: C: Style/InlineComment: Avoid trailing inline comments.
    expect(page).to have_content('Chad Parker') # First
                                                ^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:24:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('cparker@corps.tamu.edu')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:25:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Mia Michaels') # Middle
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:25:50: C: Style/InlineComment: Avoid trailing inline comments.
    expect(page).to have_content('Mia Michaels') # Middle
                                                 ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:26:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('AggiePhiPresident@gmail.com')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:27:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('ABC Voicemail Line') # Last
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:27:56: C: Style/InlineComment: Avoid trailing inline comments.
    expect(page).to have_content('ABC Voicemail Line') # Last
                                                       ^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:28:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('carter.brown@tamu.edu')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:32:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Delete"
             ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:35:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Sunny day: Deletes everything for test purposes' do
  ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:36:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/feature/maria_scrape_stuact_spec.rb:43:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content('A Battery')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:44:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content('Alpha Epsilon Phi Sorority')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:48:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content('Chad Parker')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:49:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content('Mia Michaels')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:50:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content('AggiePhiPresident@gmail.com')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:53:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rainy day: does not replace old contact information' do
  ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:55:5: W: Lint/UselessAssignment: Useless assignment to variable - org.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
    ^^^
spec/feature/maria_scrape_stuact_spec.rb:55:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
                       ^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:56:5: W: Lint/UselessAssignment: Useless assignment to variable - contact. Did you mean contacts_path?
    contact = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Person A',
    ^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:56:23: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    contact = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Person A',
                      ^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:57:117: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                             email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                                                                                                                    ^
spec/feature/maria_scrape_stuact_spec.rb:62:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(Contact.find_by(personID: 1).name).to eq('Person A')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:64:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Delete"
             ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:67:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rainy day: updates out of date organization information when both org name and contact name match' do
  ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:69:5: W: Lint/UselessAssignment: Useless assignment to variable - org.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
    ^^^
spec/feature/maria_scrape_stuact_spec.rb:69:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
                       ^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:70:5: W: Lint/UselessAssignment: Useless assignment to variable - contact. Did you mean contacts_path?
    contact = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Chad Parker',
    ^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:70:23: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    contact = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Chad Parker',
                      ^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:71:117: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                             email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                                                                                                                    ^
spec/feature/maria_scrape_stuact_spec.rb:77:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(Contact.find_by(orgID: 1).email).to eq('cparker@corps.tamu.edu')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:79:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Delete"
             ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:82:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rainy day: Creates new contact if organization exists and contact does not' do
  ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:84:5: W: Lint/UselessAssignment: Useless assignment to variable - org.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
    ^^^
spec/feature/maria_scrape_stuact_spec.rb:84:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
                       ^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:90:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(Contact.find_by(orgID: 1).name).to eq('Chad Parker')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:91:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(Contact.find_by(orgID: 1).email).to eq('cparker@corps.tamu.edu')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:93:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Delete"
             ^^^^^^^^
spec/feature/maria_scrape_stuact_spec.rb:95:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/feature/sana_view_app_spec.rb:4:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/feature/feature_spec.rb
^
spec/feature/sana_view_app_spec.rb:8:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/feature/sana_view_app_spec.rb:14:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Shows correct application once added' do
  ^^^^^^^^
spec/feature/sana_view_app_spec.rb:15:5: W: Lint/UselessAssignment: Useless assignment to variable - org.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'description')
    ^^^
spec/feature/sana_view_app_spec.rb:15:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'description')
                       ^^^^^^
spec/feature/sana_view_app_spec.rb:16:5: W: Lint/UselessAssignment: Useless assignment to variable - app1.
    app1 = Application.create(applicationID: 1, orgID: 1, name: 'first application', datebuilt:20_210_621, githublink: 'github.com', description: 'test')
    ^^^^
spec/feature/sana_view_app_spec.rb:16:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    app1 = Application.create(applicationID: 1, orgID: 1, name: 'first application', datebuilt:20_210_621, githublink: 'github.com', description: 'test')
                       ^^^^^^
spec/feature/sana_view_app_spec.rb:16:95: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
    app1 = Application.create(applicationID: 1, orgID: 1, name: 'first application', datebuilt:20_210_621, githublink: 'github.com', description: 'test')
                                                                                              ^
spec/feature/sana_view_app_spec.rb:18:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(Application.find_by(applicationID: 1).name).to eq('first application')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:19:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(Organization.find_by(orgID: 1).name).to eq('A Battery')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:22:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Show this organization"
             ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:23:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this organization"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:25:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Show this application"
             ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:26:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this application"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:29:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Shows correct contact info' do
  ^^^^^^^^
spec/feature/sana_view_app_spec.rb:30:5: W: Lint/UselessAssignment: Useless assignment to variable - org.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'description')
    ^^^
spec/feature/sana_view_app_spec.rb:30:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'description')
                       ^^^^^^
spec/feature/sana_view_app_spec.rb:31:5: W: Lint/UselessAssignment: Useless assignment to variable - contact. Did you mean contacts_path?
    contact = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Chad Parker',
    ^^^^^^^
spec/feature/sana_view_app_spec.rb:31:23: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    contact = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Chad Parker',
                      ^^^^^^
spec/feature/sana_view_app_spec.rb:32:126: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                             email: 'cparker@corps.tamu.edu', officerposition: 'President', description: 'Unique description')
                                                                                                                             ^
spec/feature/sana_view_app_spec.rb:34:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(Contact.find_by(personID: 1).name).to eq('Chad Parker')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:35:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(Contact.find_by(personID: 1).email).to eq('cparker@corps.tamu.edu')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:42:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Shows correct number of applications' do
  ^^^^^^^^
spec/feature/sana_view_app_spec.rb:43:5: W: Lint/UselessAssignment: Useless assignment to variable - org.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'description')
    ^^^
spec/feature/sana_view_app_spec.rb:43:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    org = Organization.create(orgID: 1, name: 'A Battery', description: 'description')
                       ^^^^^^
spec/feature/sana_view_app_spec.rb:44:5: W: Lint/UselessAssignment: Useless assignment to variable - app1.
    app1 = Application.create(applicationID: 1, orgID: 1, name: 'first application', datebuilt:20_210_621, githublink: 'github.com', description: 'test')
    ^^^^
spec/feature/sana_view_app_spec.rb:44:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    app1 = Application.create(applicationID: 1, orgID: 1, name: 'first application', datebuilt:20_210_621, githublink: 'github.com', description: 'test')
                       ^^^^^^
spec/feature/sana_view_app_spec.rb:44:95: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
    app1 = Application.create(applicationID: 1, orgID: 1, name: 'first application', datebuilt:20_210_621, githublink: 'github.com', description: 'test')
                                                                                              ^
spec/feature/sana_view_app_spec.rb:49:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Show this organization"
             ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:50:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this organization"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:52:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Show this application"
             ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:53:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this application"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/sana_view_app_spec.rb:55:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/feature/tripper_edit_app_spec.rb:4:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/feature/feature_spec.rb
^
spec/feature/tripper_edit_app_spec.rb:7:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe 'Editing an Application', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:7:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Editing an Application', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:8:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/feature/tripper_edit_app_spec.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'valid inputs' do 
^^^^
spec/feature/tripper_edit_app_spec.rb:9:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'valid inputs' do 
    ^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:9:31: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    scenario 'valid inputs' do 
                              ^
spec/feature/tripper_edit_app_spec.rb:10:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit application_path
    ^^^^
spec/feature/tripper_edit_app_spec.rb:12:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[Name]", with: 'Test Application'
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:13:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[Type]", with: 'Web'
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:14:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[Notes]", with: 'Noting of Note'
                ^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:16:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(page).to have_content('Application was successfully Edited.')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:19:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'Blank inputs' do 
    ^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:19:31: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    scenario 'Blank inputs' do 
                              ^
spec/feature/tripper_edit_app_spec.rb:20:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit application_path
    ^^^^
spec/feature/tripper_edit_app_spec.rb:23:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(page).to have_content('Edits Cannot Be Blank')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:26:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'Invalid inputs' do 
    ^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:26:33: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    scenario 'Invalid inputs' do 
                                ^
spec/feature/tripper_edit_app_spec.rb:27:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit application_path
    ^^^^
spec/feature/tripper_edit_app_spec.rb:29:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[Name]", with: 'テスト・アップ'
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:30:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[Notes]", with: '!@#$%^&*()'
                ^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:31:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[Type]", with: '12▌╚X8_á⌂╛5'
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:34:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(page).to have_content('Invalid character types used, please only use alphanumeric and punctuation symbols.')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:38:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Editing an Existing Application', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:39:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/feature/tripper_edit_app_spec.rb:40:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'valid inputs' do 
^^^^
spec/feature/tripper_edit_app_spec.rb:40:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'valid inputs' do 
    ^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:40:31: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    scenario 'valid inputs' do 
                              ^
spec/feature/tripper_edit_app_spec.rb:41:7: W: Lint/UselessAssignment: Useless assignment to variable - org.
      org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
      ^^^
spec/feature/tripper_edit_app_spec.rb:41:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
                         ^^^^^^
spec/feature/tripper_edit_app_spec.rb:42:7: W: Lint/UselessAssignment: Useless assignment to variable - org.
      org = Organization.create(orgID: 2, name: 'B Battery', description: 'Unique description')
      ^^^
spec/feature/tripper_edit_app_spec.rb:42:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org = Organization.create(orgID: 2, name: 'B Battery', description: 'Unique description')
                         ^^^^^^
spec/feature/tripper_edit_app_spec.rb:43:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        visit applications_path
        ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:44:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_on 'New application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:45:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[name]", with: 'Test Application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:45:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[name]", with: 'Test Application'
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:46:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[orgID]", with: '01'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:46:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[orgID]", with: '01'
                ^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:47:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[applicationID]", with: '01'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:47:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[applicationID]", with: '01'
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:48:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[datebuilt]", with: '01-01-2001'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:48:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[datebuilt]", with: '01-01-2001'
                ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:49:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[githublink]", with: 'www.github.com'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:49:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[githublink]", with: 'www.github.com'
                ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:50:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[description]", with: 'test description'        
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:50:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[description]", with: 'test description'        
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:50:69: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        fill_in "application[description]", with: 'test description'        
                                                                    ^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:52:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_on 'Create Application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:53:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_link 'Edit'
        ^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:54:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[name]", with: 'Test Application2'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:54:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[name]", with: 'Test Application2'
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:55:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[orgID]", with: '02'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:55:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[orgID]", with: '02'
                ^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:56:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[applicationID]", with: '02'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:56:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[applicationID]", with: '02'
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:57:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_on 'Update Application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:58:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        expect(page).to have_content('Application was successfully updated.')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:58:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(page).to have_content('Application was successfully updated.')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:60:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/feature/tripper_edit_app_spec.rb:61:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'Blank inputs' do 
    ^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:61:31: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    scenario 'Blank inputs' do 
                              ^
spec/feature/tripper_edit_app_spec.rb:62:7: W: Lint/UselessAssignment: Useless assignment to variable - org.
      org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
      ^^^
spec/feature/tripper_edit_app_spec.rb:62:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
                         ^^^^^^
spec/feature/tripper_edit_app_spec.rb:63:7: W: Lint/UselessAssignment: Useless assignment to variable - org.
      org = Organization.create(orgID: 2, name: 'B Battery', description: 'Unique description')
      ^^^
spec/feature/tripper_edit_app_spec.rb:63:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org = Organization.create(orgID: 2, name: 'B Battery', description: 'Unique description')
                         ^^^^^^
spec/feature/tripper_edit_app_spec.rb:64:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        visit applications_path
        ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:65:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_on 'New application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:66:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[name]", with: 'Test Application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:66:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[name]", with: 'Test Application'
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:67:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[orgID]", with: '01'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:67:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[orgID]", with: '01'
                ^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:68:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[applicationID]", with: '01'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:68:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[applicationID]", with: '01'
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:69:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[datebuilt]", with: '01-01-2001'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:69:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[datebuilt]", with: '01-01-2001'
                ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:70:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[githublink]", with: 'www.github.com'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:70:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[githublink]", with: 'www.github.com'
                ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:71:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[description]", with: 'test description'  
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:71:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[description]", with: 'test description'  
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:71:69: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        fill_in "application[description]", with: 'test description'  
                                                                    ^^
spec/feature/tripper_edit_app_spec.rb:73:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_on 'Create Application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:74:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_link 'Edit'
        ^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:75:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[name]", with: ' '
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:75:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[name]", with: ' '
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:76:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_on 'Update Application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:77:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        expect(page).to have_content('Name can\'t be blank')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:77:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(page).to have_content('Name can\'t be blank')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:80:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'Irregular inputs' do 
    ^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:80:35: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    scenario 'Irregular inputs' do 
                                  ^
spec/feature/tripper_edit_app_spec.rb:81:7: W: Lint/UselessAssignment: Useless assignment to variable - org.
      org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
      ^^^
spec/feature/tripper_edit_app_spec.rb:81:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org = Organization.create(orgID: 1, name: 'A Battery', description: 'Unique description')
                         ^^^^^^
spec/feature/tripper_edit_app_spec.rb:82:7: W: Lint/UselessAssignment: Useless assignment to variable - org.
      org = Organization.create(orgID: 2, name: 'B Battery', description: 'Unique description')
      ^^^
spec/feature/tripper_edit_app_spec.rb:82:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org = Organization.create(orgID: 2, name: 'B Battery', description: 'Unique description')
                         ^^^^^^
spec/feature/tripper_edit_app_spec.rb:83:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        visit applications_path
        ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:84:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_on 'New application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:85:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[name]", with: 'Test Application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:85:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[name]", with: 'Test Application'
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:86:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[orgID]", with: '01'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:86:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[orgID]", with: '01'
                ^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:87:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[applicationID]", with: '01'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:87:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[applicationID]", with: '01'
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:88:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[datebuilt]", with: '01-01-2001'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:88:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[datebuilt]", with: '01-01-2001'
                ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:89:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[githublink]", with: 'www.github.com'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:89:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[githublink]", with: 'www.github.com'
                ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:90:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[description]", with: 'test description'  
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:90:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[description]", with: 'test description'  
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:90:69: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        fill_in "application[description]", with: 'test description'  
                                                                    ^^
spec/feature/tripper_edit_app_spec.rb:91:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_on 'Create Application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:92:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_link 'Edit'
        ^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:93:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        fill_in "application[name]", with: 'テスト・アップ12▌╚X8_á⌂╛5'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:93:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fill_in "application[name]", with: 'テスト・アップ12▌╚X8_á⌂╛5'
                ^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:94:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        click_on 'Update Application'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:97:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        expect(page).to have_content('Application was successfully updated.')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:97:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(page).to have_content('Application was successfully updated.')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_edit_app_spec.rb:99:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/feature/tripper_filter_csv_spec.rb:4:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/feature/feature_spec.rb
^
spec/feature/tripper_filter_csv_spec.rb:7:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Downloading CSV with exclusions', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'No Exclusion' do
^^^^
spec/feature/tripper_filter_csv_spec.rb:8:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'No Exclusion' do
    ^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:9:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/tripper_filter_csv_spec.rb:13:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #verify csv has all columns 
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:13:36: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        #verify csv has all columns 
                                   ^
spec/feature/tripper_filter_csv_spec.rb:14:13: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
        data=CSV.read("../test_file.csv",return_headers: true)
            ^
spec/feature/tripper_filter_csv_spec.rb:14:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        data=CSV.read("../test_file.csv",return_headers: true)
                      ^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:14:41: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
        data=CSV.read("../test_file.csv",return_headers: true)
                                        ^
spec/feature/tripper_filter_csv_spec.rb:15:12: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
        row=data.shift
           ^
spec/feature/tripper_filter_csv_spec.rb:16:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(row).to have_content('Org')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:17:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(row).to have_content('Link')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:18:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(row).to have_content('Email')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:19:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(row).to have_content('Contact')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:20:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        File.delete("../test_file.csv")
                    ^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:23:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'Some Exclusion' do
    ^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:24:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/tripper_filter_csv_spec.rb:29:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #verify csv does not have collumn
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:30:13: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
        data=CSV.read("../test_file.csv",return_headers: true)
            ^
spec/feature/tripper_filter_csv_spec.rb:30:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        data=CSV.read("../test_file.csv",return_headers: true)
                      ^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:30:41: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
        data=CSV.read("../test_file.csv",return_headers: true)
                                        ^
spec/feature/tripper_filter_csv_spec.rb:31:12: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
        row=data.shift
           ^
spec/feature/tripper_filter_csv_spec.rb:32:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(row).to have_content('Link')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:33:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(row).to have_content('Email')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:34:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        File.delete("../test_file.csv")
                    ^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:37:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'All Excluded' do
    ^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:38:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/tripper_filter_csv_spec.rb:41:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #exclude all columns
        ^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:46:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #verify csv not downloaded
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:47:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(File.exists?(file_name)).to eq(false)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:47:16: W: [Correctable] Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
        expect(File.exists?(file_name)).to eq(false)
               ^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:48:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #verify error message
        ^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:49:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(page).to have_content('CSV Cannot Be Empty')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/tripper_filter_csv_spec.rb:51:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/rails_helper.rb:34:1: C: [Correctable] Layout/EmptyLinesAroundBeginBody: Extra empty line detected at begin body end.
spec/rails_helper.rb:38:25: C: Rails/FilePath: Prefer Rails.root.join('path/to').
  config.fixture_path = "#{::Rails.root}/spec/fixtures"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/sai_delete_apps_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# By: Sai
^
spec/system/sai_delete_apps_spec.rb:5:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "Delete Applications", type: :system do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/sai_delete_apps_spec.rb:5:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Delete Applications", type: :system do
               ^^^^^^^^^^^^^^^^^^^^^
spec/system/sai_delete_apps_spec.rb:17:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Application Deleted!')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/system/sai_delete_apps_spec.rb:19:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/unit/alan_cats_spec.rb:5:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/unit/unit_spec.rb
^
spec/unit/alan_cats_spec.rb:8:1: C: RSpec/FilePath: Spec path should end with category*_spec.rb.
RSpec.describe Category, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/alan_cats_spec.rb:8:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Category, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/alan_cats_spec.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it 'is not valid if category ID is not unique' do
^^^^
spec/unit/alan_cats_spec.rb:9:5: W: Lint/EmptyBlock: Empty block detected.
    it 'is not valid if category ID is not unique' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/maria_contacts_spec.rb:5:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/unit/unit_spec.rb
^
spec/unit/maria_contacts_spec.rb:8:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Contact, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/maria_contacts_spec.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it 'is not valid if contact PK is not unique' do
^^^^
spec/unit/maria_contacts_spec.rb:10:7: W: Lint/UselessAssignment: Useless assignment to variable - org1.
      org1 = Organization.create(orgID: 1, name: 'Student org A', description: 'Unique description')
      ^^^^
spec/unit/maria_contacts_spec.rb:10:27: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org1 = Organization.create(orgID: 1, name: 'Student org A', description: 'Unique description')
                          ^^^^^^
spec/unit/maria_contacts_spec.rb:11:17: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Contact.
      person1 = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Person A',
                ^^^^^^^
spec/unit/maria_contacts_spec.rb:11:25: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      person1 = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Person A',
                        ^^^^^^
spec/unit/maria_contacts_spec.rb:12:119: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                               email: 'john@tamu.edu', officerposition: 'President', description: 'Unique description')
                                                                                                                      ^
spec/unit/maria_contacts_spec.rb:13:17: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Contact.
      person2 = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Person B',
                ^^^^^^^
spec/unit/maria_contacts_spec.rb:13:25: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      person2 = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Person B',
                        ^^^^^^
spec/unit/maria_contacts_spec.rb:14:118: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                               email: 'johnsmith@tamu.edu', officerposition: 'Unknown', description: 'Different here')
                                                                                                                     ^
spec/unit/maria_contacts_spec.rb:15:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(person1).to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/maria_contacts_spec.rb:16:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(person2).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/maria_contacts_spec.rb:16:23: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(person2).to_not be_valid
                      ^^^^^^
spec/unit/maria_contacts_spec.rb:20:17: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Contact.
      person1 = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Person B',
                ^^^^^^^
spec/unit/maria_contacts_spec.rb:20:25: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      person1 = Contact.create(personID: 1, orgID: 1, year: 20_210_621, name: 'Person B',
                        ^^^^^^
spec/unit/maria_contacts_spec.rb:21:118: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                               email: 'johnsmith@tamu.edu', officerposition: 'Unknown', description: 'Different here')
                                                                                                                     ^
spec/unit/maria_contacts_spec.rb:22:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(person1).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/maria_contacts_spec.rb:22:23: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(person1).to_not be_valid
                      ^^^^^^
spec/unit/sai_appcats_spec.rb:5:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/unit/unit_spec.rb
^
spec/unit/sai_appcats_spec.rb:8:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Appcat, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sai_appcats_spec.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it 'is not valid if category ID is not valid' do
^^^^
spec/unit/sai_appcats_spec.rb:9:5: W: Lint/EmptyBlock: Empty block detected.
    it 'is not valid if category ID is not valid' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sai_appcats_spec.rb:9:5: C: RSpec/RepeatedExample: Don't repeat examples within an example group.
    it 'is not valid if category ID is not valid' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sai_appcats_spec.rb:12:5: W: Lint/EmptyBlock: Empty block detected.
    it 'is not valid if application ID is not valid' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sai_appcats_spec.rb:12:5: C: RSpec/RepeatedExample: Don't repeat examples within an example group.
    it 'is not valid if application ID is not valid' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:5:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/unit/unit_spec.rb
^
spec/unit/sana_apps_spec.rb:8:1: C: RSpec/FilePath: Spec path should end with application*_spec.rb.
RSpec.describe Application, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:8:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Application, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:9:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/unit/sana_apps_spec.rb:10:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it 'is not valid if application PK is not unique' do
^^^^
spec/unit/sana_apps_spec.rb:11:7: W: Lint/UselessAssignment: Useless assignment to variable - org1.
      org1 = Organization.create(orgID: 1, name: 'Student org A', description: 'Unique description')
      ^^^^
spec/unit/sana_apps_spec.rb:11:27: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org1 = Organization.create(orgID: 1, name: 'Student org A', description: 'Unique description')
                          ^^^^^^
spec/unit/sana_apps_spec.rb:12:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
      app1 = Application.create(applicationID: 1, orgID: 1, name: 'App A', datebuilt: 20_210_621,
             ^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:12:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      app1 = Application.create(applicationID: 1, orgID: 1, name: 'App A', datebuilt: 20_210_621,
                         ^^^^^^
spec/unit/sana_apps_spec.rb:13:124: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                                githublink: 'https://gist.github.com/sseletskyy/5899820', description: 'Unique description')
                                                                                                                           ^
spec/unit/sana_apps_spec.rb:14:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
      app2 = Application.create(applicationID: 1, orgID: 1, name: 'App B', datebuilt: 20_210_621,
             ^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:14:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      app2 = Application.create(applicationID: 1, orgID: 1, name: 'App B', datebuilt: 20_210_621,
                         ^^^^^^
spec/unit/sana_apps_spec.rb:15:120: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                                githublink: 'https://gist.github.com/sseletskyy/5899821', description: 'Different here')
                                                                                                                       ^
spec/unit/sana_apps_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/sana_apps_spec.rb:17:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(app1).to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:18:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(app2).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:18:20: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(app2).to_not be_valid
                   ^^^^^^
spec/unit/sana_apps_spec.rb:20:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/sana_apps_spec.rb:22:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
      app1 = Application.create(applicationID: -1, orgID: 1, name: 'App 1', datebuilt: 20_210_621,
             ^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:22:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      app1 = Application.create(applicationID: -1, orgID: 1, name: 'App 1', datebuilt: 20_210_621,
                         ^^^^^^
spec/unit/sana_apps_spec.rb:23:80: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                                githublink: 'link2', description: 'description')
                                                                               ^
spec/unit/sana_apps_spec.rb:24:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(app1).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:24:20: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(app1).to_not be_valid
                   ^^^^^^
spec/unit/sana_apps_spec.rb:31:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/sana_apps_spec.rb:33:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
      app3 = Application.create(applicationID: 2, orgID: 2, name: 'Test App 3', datebuilt: 20_210_621,
             ^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:33:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      app3 = Application.create(applicationID: 2, orgID: 2, name: 'Test App 3', datebuilt: 20_210_621,
                         ^^^^^^
spec/unit/sana_apps_spec.rb:34:84: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                                githublink: 'github.com', description: 'test app 3')
                                                                                   ^
spec/unit/sana_apps_spec.rb:35:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
      app4 = Application.create(applicationID: 4, orgID: -2, name: 'Test App 4', datebuilt: 20_210_621,
             ^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:35:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      app4 = Application.create(applicationID: 4, orgID: -2, name: 'Test App 4', datebuilt: 20_210_621,
                         ^^^^^^
spec/unit/sana_apps_spec.rb:36:84: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                                githublink: 'github.com', description: 'test app 4')
                                                                                   ^
spec/unit/sana_apps_spec.rb:37:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/sana_apps_spec.rb:38:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(app3).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:38:20: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(app3).to_not be_valid
                   ^^^^^^
spec/unit/sana_apps_spec.rb:39:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(app4).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:39:20: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(app4).to_not be_valid
                   ^^^^^^
spec/unit/sana_apps_spec.rb:43:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
      app5 = Application.create(applicationID: 5, orgID: 0, name: '', datebuilt: 20_210_621,
             ^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:43:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      app5 = Application.create(applicationID: 5, orgID: 0, name: '', datebuilt: 20_210_621,
                         ^^^^^^
spec/unit/sana_apps_spec.rb:44:84: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                                githublink: 'github.com', description: 'test app 5')
                                                                                   ^
spec/unit/sana_apps_spec.rb:45:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/sana_apps_spec.rb:46:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(app5).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:46:20: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(app5).to_not be_valid
                   ^^^^^^
spec/unit/sana_apps_spec.rb:48:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/sana_apps_spec.rb:50:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
      app6 = Application.create(applicationID: 6, orgID: 0, name: 'Test App 6', datebuilt: 20_210_621,
             ^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:50:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      app6 = Application.create(applicationID: 6, orgID: 0, name: 'Test App 6', datebuilt: 20_210_621,
                         ^^^^^^
spec/unit/sana_apps_spec.rb:51:74: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                                githublink: '', description: 'test app 6')
                                                                         ^
spec/unit/sana_apps_spec.rb:52:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/sana_apps_spec.rb:53:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(app6).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:53:20: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(app6).to_not be_valid
                   ^^^^^^
spec/unit/sana_apps_spec.rb:55:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/sana_apps_spec.rb:57:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
      app7 = Application.create(applicationID: 7, orgID: 0, name: 'Test App 7', datebuilt: 20_210_621,
             ^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:57:26: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      app7 = Application.create(applicationID: 7, orgID: 0, name: 'Test App 7', datebuilt: 20_210_621,
                         ^^^^^^
spec/unit/sana_apps_spec.rb:58:74: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                                githublink: 'github.com', description: '')
                                                                         ^
spec/unit/sana_apps_spec.rb:59:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/sana_apps_spec.rb:60:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(app7).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/sana_apps_spec.rb:60:20: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(app7).to_not be_valid
                   ^^^^^^
spec/unit/sana_apps_spec.rb:62:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/unit/tripper_orgs_spec.rb:5:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/unit/unit_spec.rb
^
spec/unit/tripper_orgs_spec.rb:8:1: C: RSpec/FilePath: Spec path should end with organization*_spec.rb.
RSpec.describe Organization, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:8:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Organization, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it 'is not valid if organization PK is not unique' do
^^^^
spec/unit/tripper_orgs_spec.rb:10:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Organization.
      org1 = Organization.create(orgID: 1, name: 'Student org A', description: 'Unique description')
             ^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:10:27: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org1 = Organization.create(orgID: 1, name: 'Student org A', description: 'Unique description')
                          ^^^^^^
spec/unit/tripper_orgs_spec.rb:11:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Organization.
      org2 = Organization.create(orgID: 1, name: 'Student org B', description: 'Different here')
             ^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:11:27: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org2 = Organization.create(orgID: 1, name: 'Student org B', description: 'Different here')
                          ^^^^^^
spec/unit/tripper_orgs_spec.rb:12:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(org1).to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:13:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(org2).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:13:20: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(org2).to_not be_valid
                   ^^^^^^
spec/unit/tripper_orgs_spec.rb:17:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Organization.
      org1 = Organization.create(orgID: 2, name: 'Student org A', description: 'Unique description')
             ^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:17:27: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org1 = Organization.create(orgID: 2, name: 'Student org A', description: 'Unique description')
                          ^^^^^^
spec/unit/tripper_orgs_spec.rb:18:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Organization.
      org2 = Organization.create(orgID: 3, name: 'Student org A', description: 'Different here')
             ^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:18:27: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      org2 = Organization.create(orgID: 3, name: 'Student org A', description: 'Different here')
                          ^^^^^^
spec/unit/tripper_orgs_spec.rb:19:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(org1).to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:20:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(org2).to_not be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/tripper_orgs_spec.rb:20:20: C: [Correctable] RSpec/NotToNot: Prefer not_to over to_not.
      expect(org2).to_not be_valid
                   ^^^^^^
spec/unit/tripper_orgs_spec.rb:22:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/unit/unit_spec.rb:2:1: C: [Correctable] Layout/EmptyLineAfterMagicComment: Add an empty line after magic comments.
# location: spec/unit/unit_spec.rb
^
spec/unit/unit_spec.rb:5:1: C: RSpec/FilePath: Spec path should end with application*_spec.rb.
RSpec.describe Application, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:5:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Application, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:7:5: W: Lint/UselessAssignment: Useless assignment to variable - org1.
    org1 = Organization.create(orgID: 1, name: 'Org 1', description: 'description')
    ^^^^
spec/unit/unit_spec.rb:7:25: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    org1 = Organization.create(orgID: 1, name: 'Org 1', description: 'description')
                        ^^^^^^
spec/unit/unit_spec.rb:8:5: W: Lint/UselessAssignment: Useless assignment to variable - app1. Did you mean app2?
    app1 = Application.create(applicationID: 1, orgID: 1, name: 'App 1', datebuilt: 20_210_621,
    ^^^^
spec/unit/unit_spec.rb:8:12: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
    app1 = Application.create(applicationID: 1, orgID: 1, name: 'App 1', datebuilt: 20_210_621,
           ^^^^^^^^^^^
spec/unit/unit_spec.rb:8:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    app1 = Application.create(applicationID: 1, orgID: 1, name: 'App 1', datebuilt: 20_210_621,
                       ^^^^^^
spec/unit/unit_spec.rb:9:78: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                              githublink: 'link1', description: 'description')
                                                                             ^
spec/unit/unit_spec.rb:10:5: W: Lint/UselessAssignment: Useless assignment to variable - app2. Did you mean app1?
    app2 = Application.create(applicationID: 1, orgID: 1, name: 'App 2', datebuilt: 20_210_621,
    ^^^^
spec/unit/unit_spec.rb:10:12: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Application.
    app2 = Application.create(applicationID: 1, orgID: 1, name: 'App 2', datebuilt: 20_210_621,
           ^^^^^^^^^^^
spec/unit/unit_spec.rb:10:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    app2 = Application.create(applicationID: 1, orgID: 1, name: 'App 2', datebuilt: 20_210_621,
                       ^^^^^^
spec/unit/unit_spec.rb:11:76: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                              githublink: 'link2', description: 'different')
                                                                           ^
spec/unit/unit_spec.rb:13:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   

65 files inspected, 748 offenses detected, 623 offenses autocorrectable
